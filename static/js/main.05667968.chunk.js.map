{"version":3,"sources":["components/Task/Task.js","store/actions_types.js","components/Task/TaskList.js","components/Column/Column.js","components/InnerList.js","components/App.js","mock/initial-data.js","store/rootReducer.js","index.js"],"names":["Task","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleDeleteTask","e","props","deleteTask","target","id","inherits","createClass","key","value","_this2","_this$props","index","_this$props$task","task","content","react_default","a","createElement","react_beautiful_dnd_esm","draggableId","provided","snapshot","assign","className","ref","innerRef","draggableProps","dragHandleProps","style","display","justifyContent","onClick","Component","connect","dispatch","taskId","type","TaskList","shouldComponentUpdate","nextProps","tasks","isEmpty","map","components_Task_Task","Column","state","newTask","handleSubmit","preventDefault","taskInfo","objectSpread","columnId","column","addTask","setState","handleChange","defineProperty","_this$props$column","title","droppableId","droppableProps","Task_TaskList","placeholder","onSubmit","onChange","required","InnerList","taskMap","taskIds","components_Column_Column","React","PureComponent","App","onDragEnd","result","_this$props$data","data","columns","columnOrder","direction","components_InnerList","addColumn","columnInfo","initialData","task-1","task-2","task-3","task-4","task-5","task-6","task-7","task-8","task-9","task-10","task-11","column-1","column-2","column-3","column-4","column-5","taskIdNumber","rootReducer","undefined","initState","action","_objectSpread3","_action$result","destination","source","start","finish","newTaskIds","from","splice","newColumn","startTaskIds","newStart","finishTaskIds","newFinish","toConsumableArray","newTasks","newColumns","filter","store","createStore","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.05667968.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport * as actions_types from '../../store/actions_types';\nimport { Draggable } from 'react-beautiful-dnd'\nimport { connect } from 'react-redux'\nimport './Task.css'\n\nexport class Task extends Component {\n\n    handleDeleteTask = (e) => {\n      this.props.deleteTask(e.target.id)\n    }\n\n  render() {\n    const { index,  task: { id, content, }} = this.props;\n    \n    return (\n        <Draggable \n            draggableId={id} \n            index={index}\n          >\n          { (provided, snapshot) => (\n            <div \n              className='post-it-note '\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n              >\n              <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                }}>\n                <div>{content}</div>\n                <span \n                  className='post-it-close'\n                  onClick={this.handleDeleteTask}\n                  id={id}>\n                    X\n                  </span>\n                </div>\n            </div>\n          )}\n      </Draggable>\n    )\n  }\n}\n\nTask.propTypes = {\n  id: PropTypes.string,\n  content: PropTypes.string,\n  index: PropTypes.number.isRequired,\n};\n\n\nconst mapDispatchToProps = (dispatch) =>({\n  deleteTask: (taskId) =>\n    dispatch({ type: actions_types.DELETE_TASK, taskId })\n})\n\nexport default connect(null, mapDispatchToProps)(Task)","export const ON_DRAG_END = 'ON_DRAG_END'\nexport const ADD_TASK = 'ADD_TASK'\nexport const DELETE_TASK = 'DELETE_TASK'","import Task from './Task'\nimport React, { Component } from 'react';\nimport { isEmpty } from 'lodash'\nimport PropTypes from 'prop-types';\n\nclass TaskList extends Component {\n  shouldComponentUpdate = (nextProps) => \n    nextProps.tasks === this.props.tasks ? false : true\n\n  render () {\n    const { tasks } = this.props;\n\n    return isEmpty(tasks) \n    ? <div className='post-it-empty'>\n        Drop a task here\n      </div>\n    : tasks.map( (task, index) => (\n      <Task key={task.id} task={task} index={index} />\n    )) \n  }\n}\n\nTaskList.propTypes = {\n  tasks: PropTypes.array.isRequired\n}\n\nexport default TaskList;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport * as actions_types from '../../store/actions_types'\nimport TaskList from '../Task/TaskList'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\nimport { connect } from 'react-redux'\nimport './Column.css'\n\nexport class Column extends Component {\n    state = {\n      newTask: ''\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      const taskInfo = {\n        ...this.state,\n        columnId: this.props.column.id\n      }\n\n      this.props.addTask(taskInfo);\n      \n      this.setState({\n        newTask: ''\n      })\n    }\n\n    handleChange = (e) => \n      this.setState({\n          [e.target.id]: e.target.value\n      })\n\n    render() {\n      \n      const {\n        column: { id, title },\n        index,\n        tasks\n      } = this.props\n\n      return (\n        <div className=\"board-content\">\n          <Draggable \n            draggableId={id} index={index} >\n            { (provided) => (\n              <div \n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                className='column-content'\n              >\n              <div>\n                <div\n                  className='column-title'\n                  {...provided.dragHandleProps}>\n                  <h5>{title}</h5>\n                </div>\n                <Droppable \n                  droppableId={id}\n                  type='task'\n                >\n                  {(provided, snapshot) => (\n                    <div\n                      className='column'\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                    >\n                      <TaskList tasks={tasks} />\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              </div> \n          \n            </div>\n          )}\n       </Draggable>\n       <div>\n          {\n            title === 'Backlog' &&\n            <form\n              className=\"column-form\"\n              onSubmit={this.handleSubmit}>\n              <span>Write a new Task!</span>\n              <div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Add task\"\n                  id=\"newTask\" value={this.state.newTask}\n                  className=\"column-input\"\n                  onChange={this.handleChange} required\n                />\n              </div>\n            </form>\n          }\n        </div>\n      </div>\n\n    )\n  }\n}\n\nColumn.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.string,\n  index: PropTypes.number.isRequired,\n  tasks: PropTypes.array.isRequired\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTask: (taskInfo) =>\n    dispatch({ type: actions_types.ADD_TASK, taskInfo }),\n})\n\nexport default connect(null, mapDispatchToProps)(Column)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Column from './Column/Column';\n\nclass InnerList extends React.PureComponent {\n  render () {\n    const { column, taskMap, index } = this.props;\n    const tasks = column.taskIds.map((taskId) => taskMap[taskId]);\n    return <Column column={column} tasks={tasks} index={index} />\n  }\n}\n\nInnerList.propTypes = {\n  column: PropTypes.object.isRequired,\n  taskMap: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nexport default InnerList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InnerList from './InnerList';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux'\nimport './App.css'\n\n\nclass App extends React.Component {\n\n  onDragEnd = (result) => \n    this.props.onDragEnd(result);\n\n  render() {\n    const { \n      data: { tasks, columns, columnOrder }\n    } = this.props;\n\n    return (\n      <DragDropContext \n        onDragEnd={this.onDragEnd}\n      >\n        <Droppable droppableId='all-columns' direction='horizontal' type='column'>\n          { (provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"app-content\"\n            >\n              {columnOrder.map((columnId, index) => {\n                const column = columns[columnId];\n\n                return (\n                  <InnerList\n                    key={column.id} \n                    column={column} \n                    taskMap={tasks}\n                    index={index}\n                  />\n                )\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n  }\n}\n\nApp.propTypes = {\n  task: PropTypes.array,\n  columns: PropTypes.array,\n  columnOrder: PropTypes.number,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDragEnd: (result) => dispatch({type: 'ON_DRAG_END', result}),\n    addColumn: (columnInfo) => dispatch({type: 'ADD_COLUMN', columnInfo})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App) ","const initialData = {\n  tasks: {\n    'task-1': {id: 'task-1', content: 'Learn about React-beautiful-dnd'},\n    'task-2': {id: 'task-2', content: 'Create some project'},\n    'task-3': {id: 'task-3', content: 'Make some testes'},\n    'task-4': {id: 'task-4', content: 'Build my react application'},\n    'task-5': {id: 'task-5', content: 'Start the project'},\n    'task-6': {id: 'task-6', content: 'Create structure'},\n    'task-7': {id: 'task-7', content: 'Make a simple template'},\n    'task-8': {id: 'task-8', content: 'Style'},\n    'task-9': {id: 'task-9', content: 'Refactor my code'},\n    'task-10': {id: 'task-10', content: 'Make more refactos'},\n    'task-11': {id: 'task-11', content: 'Add PropTypes``'}\n  },\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'Backlog',\n      taskIds: ['task-1', 'task-2', 'task-3']\n    },\n    'column-2': {\n      id: 'column-2',\n      title: 'To do',\n      taskIds: ['task-4', 'task-5', 'task-6', 'task-7', 'task-8']\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'In progress',\n      taskIds: ['task-9', 'task-10', 'task-11']\n    },\n    'column-4': {\n      id: 'column-4',\n      title: 'Testing',\n      taskIds: []\n    },\n    'column-5': {\n      id: 'column-5',\n      title: 'Done',\n      taskIds: []\n    }\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3', 'column-4', 'column-5']\n}\n\nexport default initialData","import initState from '../mock/initial-data'\nimport * as actions_type from './actions_types'\nlet taskIdNumber = 12;  \n\nconst rootReducer = (state = initState, action) => {\n    switch (action.type){\n        case actions_type.ON_DRAG_END: {\n          const { destination, source, draggableId } = action.result;\n          \n          // no destination\n          if(!destination) {\n            return state;\n          }\n\n          //if no change\n          if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n          ) {\n            return state;\n          }\n\n          const start = state.columns[source.droppableId];\n          const finish = state.columns[destination.droppableId];\n\n          if( start === finish ){\n            const newTaskIds = Array.from(start.taskIds);\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, draggableId);\n\n            const newColumn = {\n              ...start,\n              taskIds: newTaskIds\n            }\n\n            const newState = {\n              ...state,\n              columns: {\n                ...state.columns,\n                [newColumn.id]: newColumn\n              }\n            }\n            return newState;\n          }\n\n          const startTaskIds = Array.from(start.taskIds);\n          startTaskIds.splice(source.index, 1);\n          const newStart = {\n            ...start,\n            taskIds: startTaskIds\n          }\n\n          const finishTaskIds = Array.from(finish.taskIds);\n          finishTaskIds.splice(destination.index, 0, draggableId);\n          const newFinish = {\n            ...finish,\n            taskIds: finishTaskIds\n          }\n          \n          const newState = {\n            ...state,\n            columns: {\n              ...state.columns,\n              [newStart.id]: newStart,\n              [newFinish.id]: newFinish\n            }\n          }\n          return newState; \n        }\n\n        case actions_type.ADD_TASK : {\n\n          // trivial way to assign task's id\n          let taskId = `task-${taskIdNumber}`;\n          taskIdNumber++;  \n\n          // appending the new task\n          const newTask = {\n            [taskId]: {id: taskId, content: action.taskInfo.newTask}\n          }\n\n          // new state\n          const newState = {\n            ...state,\n            tasks: {\n                ...state.tasks,\n                ...newTask\n            },\n            columns: {\n              ...state.columns,\n              [action.taskInfo.columnId]: {\n                ...state.columns[action.taskInfo.columnId],\n                taskIds: [\n                  ...state.columns[action.taskInfo.columnId].taskIds,\n                  taskId\n                ]\n              }\n            }\n          }\n\n          return newState;\n        }\n        case actions_type.DELETE_TASK : {\n            // new tasks\n            const newTasks = state.tasks;\n            delete newTasks[action.taskId];\n\n            // new columns\n            const newColumns = state.columns;\n            for (var column in state.columns){\n              newColumns[column] = {\n                ...newColumns[column],\n                taskIds: newColumns[column].taskIds.filter( (id) => id !== action.taskId)\n              }\n            }\n\n            // new state\n            const newState = {\n              ...state,\n              tasks: newTasks,\n              columns: newColumns\n            }\n\n            return newState;\n        }\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer","import App from './components/App'\nimport React from 'react';\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/rootReducer'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}